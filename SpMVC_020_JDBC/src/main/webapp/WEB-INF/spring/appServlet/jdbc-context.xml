<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 
	주석을 작성할때는 꺽쇠, 느낌표 기호 사용금지
	
	*-context.xml 파일
	project에서 선언한, 사용할 클래스를 객체로 미리 선언하기 위한 설정을 하는 곳
	
	been
	Spring container가 클래스를 컴파일하여 객체로 생성한 후 보관하고 있는 상태
	java code에서 Class obj = new Class()(초기화 하여 사용할 준비를 하는것) 와 같은 코드를 사용하여 
	객체를 생성(초기화)하면 이때 obj가 바로 bean이다.
	
	Spring container는 여기에 설정된 항목을 보고 서버가 시작될 때 클래스를 컴파일하여 객체로 생성한 후 보관을 하게 된다.
	 -->
	 
	 <!-- 
	 여기서는 spring-jdbc를 사용하여 DBMS 연동을 위한 설정
	 
	 클래스를 사용하여 객체를 선언(초기화)하겠다. 라는 선언
	 DriverManagerDataSource = new DriverManagerDataSource();
	 
	 다 만들면 인식하게 해주자
	  -->
	  <!-- 
	  jdbc를 통하여 DBMS에 연결하는 Connection 생성
	   -->
	  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	  	<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
	  	<property name="url" value="jdbc:mysql://localhost:3306/bookrent"/>
	  	<property name="username" value="gbUser"/>
	  	<property name="password" value="12345"/>
	  
	  </bean>
	  
	  <!-- Java code를 사용하여 DBMS를 SQL로 보내고 결과를 수신하기 위한 Helpper class 클래스 생성 -->
	  <!-- Helpper 클래스를 만들지 않아도 되지만, 다른 것들이 번거러워 지기 때문에 생성해주자 -->
	  <!-- template를 이용해서 사용할꺼고 위에 생성한 dataSource를 위해 객체를 생성해 놓은것을 사용할 것임 -->
	  
	  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
  		<constructor-arg ref="dataSource"/>
	  
	  </bean>

</beans>
